namespace FinanzasPersonales.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class CambioAlContext : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("dbo.Categoria", "EstadoCategoriaID", "dbo.EstadoCategoria");
            DropForeignKey("dbo.Categoria", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.PresupuestoCategoria", "CategoriaID", "dbo.Categoria");
            DropForeignKey("dbo.Categoria", "TipoCategoriaID", "dbo.TipoCategoria");
            DropForeignKey("dbo.CuentaBanco", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.CuentaPrestamo", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.TarjetaCredito", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.CuentaBanco", "BancoID", "dbo.Banco");
            DropForeignKey("dbo.CuentaBanco", "EstadoCuentaBancoID", "dbo.EstadoCuentaBanco");
            DropForeignKey("dbo.TarjetaCredito", "BancoID", "dbo.Banco");
            DropForeignKey("dbo.TarjetaCredito", "EstadoTarjetaCreditoID", "dbo.EstadoTarjetaCredito");
            DropForeignKey("dbo.TarjetaCredito", "MarcaID", "dbo.Marca");
            DropForeignKey("dbo.PatronRecurrente", "RecordatorioID", "dbo.Recordatorio");
            DropForeignKey("dbo.PatronRecurrente", "TipoRecurrenciaID", "dbo.TipoRecurrencia");
            DropForeignKey("dbo.PresupuestoCategoria", "PresupuestoID", "dbo.Presupuesto");
            DropForeignKey("dbo.Presupuesto", "PeriodoTemporalID", "dbo.PeriodoTemporal");
            DropIndex("dbo.Categoria", new[] { "User_Id" });
            DropIndex("dbo.CuentaBanco", new[] { "User_Id" });
            DropIndex("dbo.TarjetaCredito", new[] { "User_Id" });
            DropIndex("dbo.Transaccion", new[] { "User_Id" });
            DropIndex("dbo.Contacto", new[] { "User_Id" });
            DropIndex("dbo.CuentaPrestamo", new[] { "User_Id" });
            DropIndex("dbo.Recordatorio", new[] { "User_Id" });
            DropIndex("dbo.Presupuesto", new[] { "User_Id" });
            DropColumn("dbo.Categoria", "UsuarioID");
            DropColumn("dbo.Categoria", "PadreCategoriaID");
            DropColumn("dbo.CuentaBanco", "UsuarioID");
            DropColumn("dbo.TarjetaCredito", "UsuarioID");
            DropColumn("dbo.Transaccion", "UsuarioID");
            DropColumn("dbo.Contacto", "UsuarioID");
            DropColumn("dbo.CuentaPrestamo", "UsuarioID");
            DropColumn("dbo.Recordatorio", "UsuarioID");
            DropColumn("dbo.Presupuesto", "UsuarioID");
            RenameColumn(table: "dbo.Categoria", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.Contacto", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.CuentaBanco", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.CuentaPrestamo", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.Presupuesto", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.Recordatorio", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.TarjetaCredito", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.Transaccion", name: "User_Id", newName: "UsuarioID");
            RenameColumn(table: "dbo.Categoria", name: "Categoria2_CategoriaID", newName: "PadreCategoriaID");
            RenameIndex(table: "dbo.Categoria", name: "IX_Categoria2_CategoriaID", newName: "IX_PadreCategoriaID");
            CreateTable(
                "dbo.EstadoTarjetaDebito",
                c => new
                    {
                        EstadoTarjetaDebitoID = c.Int(nullable: false, identity: true),
                        Estado = c.String(nullable: false, maxLength: 200, unicode: false),
                    })
                .PrimaryKey(t => t.EstadoTarjetaDebitoID);
            
            AlterColumn("dbo.User", "Nombre", c => c.String(nullable: false, maxLength: 50, unicode: false));
            AlterColumn("dbo.User", "Apellido", c => c.String(nullable: false, maxLength: 50, unicode: false));
            AlterColumn("dbo.User", "Sexo", c => c.String(nullable: false, maxLength: 1, fixedLength: true, unicode: false));
            AlterColumn("dbo.User", "Direccion", c => c.String(nullable: false, maxLength: 100, unicode: false));
            AlterColumn("dbo.Categoria", "Comentario", c => c.String(maxLength: 800, unicode: false));
            AlterColumn("dbo.Categoria", "Nombre", c => c.String(maxLength: 400, unicode: false));
            AlterColumn("dbo.Categoria", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.EstadoCategoria", "Estado", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.Moneda", "Codigo", c => c.String(nullable: false, maxLength: 3, unicode: false));
            AlterColumn("dbo.Moneda", "Nombre", c => c.String(nullable: false, maxLength: 60, unicode: false));
            AlterColumn("dbo.CuentaBanco", "NumeroCuenta", c => c.String(nullable: false, maxLength: 40, unicode: false));
            AlterColumn("dbo.CuentaBanco", "NombreTitular", c => c.String(nullable: false, maxLength: 80, unicode: false));
            AlterColumn("dbo.CuentaBanco", "ApellidoTitular", c => c.String(nullable: false, maxLength: 80, unicode: false));
            AlterColumn("dbo.CuentaBanco", "BalanceInicial", c => c.Decimal(nullable: false, precision: 19, scale: 4));
            AlterColumn("dbo.CuentaBanco", "Comentario", c => c.String(maxLength: 800, unicode: false));
            AlterColumn("dbo.CuentaBanco", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.Banco", "NombreBanco", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.Banco", "Pais", c => c.String(nullable: false, maxLength: 30, unicode: false));
            AlterColumn("dbo.TarjetaCredito", "NumeroTarjeta", c => c.String(nullable: false, maxLength: 40, unicode: false));
            AlterColumn("dbo.TarjetaCredito", "NombreTitular", c => c.String(nullable: false, maxLength: 80, unicode: false));
            AlterColumn("dbo.TarjetaCredito", "ApellidoTitular", c => c.String(nullable: false, maxLength: 80, unicode: false));
            AlterColumn("dbo.TarjetaCredito", "CVC", c => c.String(nullable: false, maxLength: 3, unicode: false));
            AlterColumn("dbo.TarjetaCredito", "TasaEfectivaAnual", c => c.Decimal(nullable: false, precision: 8, scale: 4));
            AlterColumn("dbo.TarjetaCredito", "DeudaInicial", c => c.Decimal(nullable: false, precision: 19, scale: 4));
            AlterColumn("dbo.TarjetaCredito", "LimiteCredito", c => c.Decimal(nullable: false, precision: 19, scale: 4));
            AlterColumn("dbo.TarjetaCredito", "Comentario", c => c.String(maxLength: 800, unicode: false));
            AlterColumn("dbo.TarjetaCredito", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.EstadoTarjetaCredito", "Estado", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.Marca", "Nombre", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.Transaccion", "No_Ref_Externo", c => c.String(maxLength: 100, unicode: false));
            AlterColumn("dbo.Transaccion", "Adjunto", c => c.String(maxLength: 900, unicode: false));
            AlterColumn("dbo.Transaccion", "MontoIngreso", c => c.Decimal(precision: 19, scale: 4));
            AlterColumn("dbo.Transaccion", "MontroEgreso", c => c.Decimal(precision: 19, scale: 4));
            AlterColumn("dbo.Transaccion", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.Contacto", "Nombre", c => c.String(nullable: false, maxLength: 300, unicode: false));
            AlterColumn("dbo.Contacto", "Email", c => c.String(maxLength: 256, unicode: false));
            AlterColumn("dbo.Contacto", "Direccion", c => c.String(maxLength: 500, unicode: false));
            AlterColumn("dbo.Contacto", "Telefono", c => c.String(maxLength: 400, unicode: false));
            AlterColumn("dbo.Contacto", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.CuentaPrestamo", "CapitalInicial", c => c.Decimal(precision: 19, scale: 4));
            AlterColumn("dbo.CuentaPrestamo", "TasaAnual", c => c.Decimal(nullable: false, precision: 8, scale: 4));
            AlterColumn("dbo.CuentaPrestamo", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.Recordatorio", "Descripcion", c => c.String(nullable: false, maxLength: 500, unicode: false));
            AlterColumn("dbo.Recordatorio", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.TipoRecurrencia", "Nombre", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.EstadoCuentaBanco", "Estado", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.PresupuestoCategoria", "Monto", c => c.Decimal(precision: 19, scale: 4));
            AlterColumn("dbo.Presupuesto", "Nombre", c => c.String(nullable: false, maxLength: 200, unicode: false));
            AlterColumn("dbo.Presupuesto", "UsuarioID", c => c.Int(nullable: false));
            AlterColumn("dbo.PeriodoTemporal", "Nombre", c => c.String(nullable: false, maxLength: 500, unicode: false));
            AlterColumn("dbo.TipoCategoria", "Tipo", c => c.String(nullable: false, maxLength: 100, unicode: false));
            CreateIndex("dbo.CuentaBanco", "UsuarioID");
            CreateIndex("dbo.Categoria", "UsuarioID");
            CreateIndex("dbo.Presupuesto", "UsuarioID");
            CreateIndex("dbo.Contacto", "UsuarioID");
            CreateIndex("dbo.Transaccion", "UsuarioID");
            CreateIndex("dbo.CuentaPrestamo", "UsuarioID");
            CreateIndex("dbo.Recordatorio", "UsuarioID");
            CreateIndex("dbo.TarjetaCredito", "UsuarioID");
            AddForeignKey("dbo.Categoria", "EstadoCategoriaID", "dbo.EstadoCategoria", "EstadoCategoriaID");
            AddForeignKey("dbo.Categoria", "MonedaID", "dbo.Moneda", "MonedaID");
            AddForeignKey("dbo.PresupuestoCategoria", "CategoriaID", "dbo.Categoria", "CategoriaID");
            AddForeignKey("dbo.Categoria", "TipoCategoriaID", "dbo.TipoCategoria", "TipoCategoriaID");
            AddForeignKey("dbo.CuentaBanco", "MonedaID", "dbo.Moneda", "MonedaID");
            AddForeignKey("dbo.CuentaPrestamo", "MonedaID", "dbo.Moneda", "MonedaID");
            AddForeignKey("dbo.TarjetaCredito", "MonedaID", "dbo.Moneda", "MonedaID");
            AddForeignKey("dbo.CuentaBanco", "BancoID", "dbo.Banco", "BancoID");
            AddForeignKey("dbo.CuentaBanco", "EstadoCuentaBancoID", "dbo.EstadoCuentaBanco", "EstadoCuentaBancoID");
            AddForeignKey("dbo.TarjetaCredito", "BancoID", "dbo.Banco", "BancoID");
            AddForeignKey("dbo.TarjetaCredito", "EstadoTarjetaCreditoID", "dbo.EstadoTarjetaCredito", "EstadoTarjetaCreditoID");
            AddForeignKey("dbo.TarjetaCredito", "MarcaID", "dbo.Marca", "MarcaID");
            AddForeignKey("dbo.PatronRecurrente", "RecordatorioID", "dbo.Recordatorio", "RecordatorioID");
            AddForeignKey("dbo.PatronRecurrente", "TipoRecurrenciaID", "dbo.TipoRecurrencia", "TipoRecurrenciaID");
            AddForeignKey("dbo.PresupuestoCategoria", "PresupuestoID", "dbo.Presupuesto", "PresupuestoID");
            AddForeignKey("dbo.Presupuesto", "PeriodoTemporalID", "dbo.PeriodoTemporal", "PeriodoTemporalID");
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.Presupuesto", "PeriodoTemporalID", "dbo.PeriodoTemporal");
            DropForeignKey("dbo.PresupuestoCategoria", "PresupuestoID", "dbo.Presupuesto");
            DropForeignKey("dbo.PatronRecurrente", "TipoRecurrenciaID", "dbo.TipoRecurrencia");
            DropForeignKey("dbo.PatronRecurrente", "RecordatorioID", "dbo.Recordatorio");
            DropForeignKey("dbo.TarjetaCredito", "MarcaID", "dbo.Marca");
            DropForeignKey("dbo.TarjetaCredito", "EstadoTarjetaCreditoID", "dbo.EstadoTarjetaCredito");
            DropForeignKey("dbo.TarjetaCredito", "BancoID", "dbo.Banco");
            DropForeignKey("dbo.CuentaBanco", "EstadoCuentaBancoID", "dbo.EstadoCuentaBanco");
            DropForeignKey("dbo.CuentaBanco", "BancoID", "dbo.Banco");
            DropForeignKey("dbo.TarjetaCredito", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.CuentaPrestamo", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.CuentaBanco", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.Categoria", "TipoCategoriaID", "dbo.TipoCategoria");
            DropForeignKey("dbo.PresupuestoCategoria", "CategoriaID", "dbo.Categoria");
            DropForeignKey("dbo.Categoria", "MonedaID", "dbo.Moneda");
            DropForeignKey("dbo.Categoria", "EstadoCategoriaID", "dbo.EstadoCategoria");
            DropIndex("dbo.TarjetaCredito", new[] { "UsuarioID" });
            DropIndex("dbo.Recordatorio", new[] { "UsuarioID" });
            DropIndex("dbo.CuentaPrestamo", new[] { "UsuarioID" });
            DropIndex("dbo.Transaccion", new[] { "UsuarioID" });
            DropIndex("dbo.Contacto", new[] { "UsuarioID" });
            DropIndex("dbo.Presupuesto", new[] { "UsuarioID" });
            DropIndex("dbo.Categoria", new[] { "UsuarioID" });
            DropIndex("dbo.CuentaBanco", new[] { "UsuarioID" });
            AlterColumn("dbo.TipoCategoria", "Tipo", c => c.String(nullable: false, maxLength: 100));
            AlterColumn("dbo.PeriodoTemporal", "Nombre", c => c.String(nullable: false, maxLength: 500));
            AlterColumn("dbo.Presupuesto", "UsuarioID", c => c.Int());
            AlterColumn("dbo.Presupuesto", "Nombre", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.PresupuestoCategoria", "Monto", c => c.Decimal(precision: 18, scale: 2));
            AlterColumn("dbo.EstadoCuentaBanco", "Estado", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.TipoRecurrencia", "Nombre", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.Recordatorio", "UsuarioID", c => c.Int());
            AlterColumn("dbo.Recordatorio", "Descripcion", c => c.String(nullable: false, maxLength: 500));
            AlterColumn("dbo.CuentaPrestamo", "UsuarioID", c => c.Int());
            AlterColumn("dbo.CuentaPrestamo", "TasaAnual", c => c.Decimal(nullable: false, precision: 18, scale: 2));
            AlterColumn("dbo.CuentaPrestamo", "CapitalInicial", c => c.Decimal(precision: 18, scale: 2));
            AlterColumn("dbo.Contacto", "UsuarioID", c => c.Int());
            AlterColumn("dbo.Contacto", "Telefono", c => c.String(maxLength: 400));
            AlterColumn("dbo.Contacto", "Direccion", c => c.String(maxLength: 500));
            AlterColumn("dbo.Contacto", "Email", c => c.String(maxLength: 256));
            AlterColumn("dbo.Contacto", "Nombre", c => c.String(nullable: false, maxLength: 300));
            AlterColumn("dbo.Transaccion", "UsuarioID", c => c.Int());
            AlterColumn("dbo.Transaccion", "MontroEgreso", c => c.Decimal(precision: 18, scale: 2));
            AlterColumn("dbo.Transaccion", "MontoIngreso", c => c.Decimal(precision: 18, scale: 2));
            AlterColumn("dbo.Transaccion", "Adjunto", c => c.String(maxLength: 900));
            AlterColumn("dbo.Transaccion", "No_Ref_Externo", c => c.String(maxLength: 100));
            AlterColumn("dbo.Marca", "Nombre", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.EstadoTarjetaCredito", "Estado", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.TarjetaCredito", "UsuarioID", c => c.Int());
            AlterColumn("dbo.TarjetaCredito", "Comentario", c => c.String(maxLength: 800));
            AlterColumn("dbo.TarjetaCredito", "LimiteCredito", c => c.Decimal(nullable: false, precision: 18, scale: 2));
            AlterColumn("dbo.TarjetaCredito", "DeudaInicial", c => c.Decimal(nullable: false, precision: 18, scale: 2));
            AlterColumn("dbo.TarjetaCredito", "TasaEfectivaAnual", c => c.Decimal(nullable: false, precision: 18, scale: 2));
            AlterColumn("dbo.TarjetaCredito", "CVC", c => c.String(nullable: false, maxLength: 3));
            AlterColumn("dbo.TarjetaCredito", "ApellidoTitular", c => c.String(nullable: false, maxLength: 80));
            AlterColumn("dbo.TarjetaCredito", "NombreTitular", c => c.String(nullable: false, maxLength: 80));
            AlterColumn("dbo.TarjetaCredito", "NumeroTarjeta", c => c.String(nullable: false, maxLength: 40));
            AlterColumn("dbo.Banco", "Pais", c => c.String(nullable: false, maxLength: 30));
            AlterColumn("dbo.Banco", "NombreBanco", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.CuentaBanco", "UsuarioID", c => c.Int());
            AlterColumn("dbo.CuentaBanco", "Comentario", c => c.String(maxLength: 800));
            AlterColumn("dbo.CuentaBanco", "BalanceInicial", c => c.Decimal(nullable: false, precision: 18, scale: 2));
            AlterColumn("dbo.CuentaBanco", "ApellidoTitular", c => c.String(nullable: false, maxLength: 80));
            AlterColumn("dbo.CuentaBanco", "NombreTitular", c => c.String(nullable: false, maxLength: 80));
            AlterColumn("dbo.CuentaBanco", "NumeroCuenta", c => c.String(nullable: false, maxLength: 40));
            AlterColumn("dbo.Moneda", "Nombre", c => c.String(nullable: false, maxLength: 60));
            AlterColumn("dbo.Moneda", "Codigo", c => c.String(nullable: false, maxLength: 3));
            AlterColumn("dbo.EstadoCategoria", "Estado", c => c.String(nullable: false, maxLength: 200));
            AlterColumn("dbo.Categoria", "UsuarioID", c => c.Int());
            AlterColumn("dbo.Categoria", "Nombre", c => c.String(maxLength: 400));
            AlterColumn("dbo.Categoria", "Comentario", c => c.String(maxLength: 800));
            AlterColumn("dbo.User", "Direccion", c => c.String(nullable: false, maxLength: 100));
            AlterColumn("dbo.User", "Sexo", c => c.String(nullable: false, maxLength: 1));
            AlterColumn("dbo.User", "Apellido", c => c.String(nullable: false, maxLength: 50));
            AlterColumn("dbo.User", "Nombre", c => c.String(nullable: false, maxLength: 50));
            DropTable("dbo.EstadoTarjetaDebito");
            RenameIndex(table: "dbo.Categoria", name: "IX_PadreCategoriaID", newName: "IX_Categoria2_CategoriaID");
            RenameColumn(table: "dbo.Categoria", name: "PadreCategoriaID", newName: "Categoria2_CategoriaID");
            RenameColumn(table: "dbo.Transaccion", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.TarjetaCredito", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.Recordatorio", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.Presupuesto", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.CuentaPrestamo", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.CuentaBanco", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.Contacto", name: "UsuarioID", newName: "User_Id");
            RenameColumn(table: "dbo.Categoria", name: "UsuarioID", newName: "User_Id");
            AddColumn("dbo.Presupuesto", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.Recordatorio", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.CuentaPrestamo", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.Contacto", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.Transaccion", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.TarjetaCredito", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.CuentaBanco", "UsuarioID", c => c.Int(nullable: false));
            AddColumn("dbo.Categoria", "PadreCategoriaID", c => c.Int());
            AddColumn("dbo.Categoria", "UsuarioID", c => c.Int(nullable: false));
            CreateIndex("dbo.Presupuesto", "User_Id");
            CreateIndex("dbo.Recordatorio", "User_Id");
            CreateIndex("dbo.CuentaPrestamo", "User_Id");
            CreateIndex("dbo.Contacto", "User_Id");
            CreateIndex("dbo.Transaccion", "User_Id");
            CreateIndex("dbo.TarjetaCredito", "User_Id");
            CreateIndex("dbo.CuentaBanco", "User_Id");
            CreateIndex("dbo.Categoria", "User_Id");
            AddForeignKey("dbo.Presupuesto", "PeriodoTemporalID", "dbo.PeriodoTemporal", "PeriodoTemporalID", cascadeDelete: true);
            AddForeignKey("dbo.PresupuestoCategoria", "PresupuestoID", "dbo.Presupuesto", "PresupuestoID", cascadeDelete: true);
            AddForeignKey("dbo.PatronRecurrente", "TipoRecurrenciaID", "dbo.TipoRecurrencia", "TipoRecurrenciaID", cascadeDelete: true);
            AddForeignKey("dbo.PatronRecurrente", "RecordatorioID", "dbo.Recordatorio", "RecordatorioID", cascadeDelete: true);
            AddForeignKey("dbo.TarjetaCredito", "MarcaID", "dbo.Marca", "MarcaID", cascadeDelete: true);
            AddForeignKey("dbo.TarjetaCredito", "EstadoTarjetaCreditoID", "dbo.EstadoTarjetaCredito", "EstadoTarjetaCreditoID", cascadeDelete: true);
            AddForeignKey("dbo.TarjetaCredito", "BancoID", "dbo.Banco", "BancoID", cascadeDelete: true);
            AddForeignKey("dbo.CuentaBanco", "EstadoCuentaBancoID", "dbo.EstadoCuentaBanco", "EstadoCuentaBancoID", cascadeDelete: true);
            AddForeignKey("dbo.CuentaBanco", "BancoID", "dbo.Banco", "BancoID", cascadeDelete: true);
            AddForeignKey("dbo.TarjetaCredito", "MonedaID", "dbo.Moneda", "MonedaID", cascadeDelete: true);
            AddForeignKey("dbo.CuentaPrestamo", "MonedaID", "dbo.Moneda", "MonedaID", cascadeDelete: true);
            AddForeignKey("dbo.CuentaBanco", "MonedaID", "dbo.Moneda", "MonedaID", cascadeDelete: true);
            AddForeignKey("dbo.Categoria", "TipoCategoriaID", "dbo.TipoCategoria", "TipoCategoriaID", cascadeDelete: true);
            AddForeignKey("dbo.PresupuestoCategoria", "CategoriaID", "dbo.Categoria", "CategoriaID", cascadeDelete: true);
            AddForeignKey("dbo.Categoria", "MonedaID", "dbo.Moneda", "MonedaID", cascadeDelete: true);
            AddForeignKey("dbo.Categoria", "EstadoCategoriaID", "dbo.EstadoCategoria", "EstadoCategoriaID", cascadeDelete: true);
        }
    }
}
